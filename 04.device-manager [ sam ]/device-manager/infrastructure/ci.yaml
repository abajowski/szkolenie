AWSTemplateFormatVersion: 2010-09-09
Description: Continuous Integration for Device Manager

Parameters:
  Environment:
    Type: String
    AllowedValues:
      - dev
      - test
      - prod
  ProjectName:
    Type: String
    Default: device-manager
  RepositoryName:
    Type: String
  RepositoryBranchName:
    Type: String
    Default: develop
  CloudWatchLogsRetentionInDays:
    Type: String
    Default: 7
  
Resources:
  
  ############################################
  ############ ARTIFACTS #####################
  ############################################

  ArtifactBucket:
    Type: AWS::S3::Bucket

  ############################################
  ############ CODE BUILD ####################
  ############################################

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${Environment}-${ProjectName}
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yaml
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        EnvironmentVariables:
          - Name: ARTIFACTS_BUCKET
            Value: !Ref ArtifactBucket
          - Name: PROJECT
            Value: !Ref ProjectName
          - Name: ENVIRONMENT
            Value: !Ref Environment

      ServiceRole: !Ref CodeBuildServiceRole

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:GetObjectVersion

  ############################################
  ############ CLOUDFORMATION ROLE ###########
  ############################################

  CloudFormationServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: GeneralPermissions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: !Sub arn:aws:cloudformation:${AWS::Region}:aws:transform/*
                Effect: Allow
                Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:ListChangeSets
              - Resource: !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*${ProjectName}*
                Effect: Allow
                Action:
                  - logs:PutLogEvents
                  - logs:DeleteLogGroup
                  - logs:PutRetentionPolicy
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:DescribeLogGroups
                  - logs:PutLogEvents
              - Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/${Environment}-${ProjectName}*
                Effect: Allow
                Action:
                  - iam:AttachRolePolicy
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:DeleteRolePolicy
                  - iam:DetachRolePolicy
                  - iam:GetPolicy
                  - iam:GetRole
                  - iam:GetRolePolicy
                  - iam:PassRole
                  - iam:PutRolePolicy
                  - iam:ListRoleTags
                  - iam:TagRole
                  - iam:UntagRole
              - Resource: arn:aws:apigateway:*
                Effect: Allow
                Action:
                  - apigateway:*
            
              - Effect: Allow
                Resource: '*'
                Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeSubnets
                  - ec2:DescribeVpcAttribute
                  - ec2:DescribeVpcs
                  - ec2:CreateNetworkInterface
              - Effect: Allow
                Resource: !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/${Environment}-${ProjectName}*
                Action:
                  - events:DeleteRule
                  - events:DescribeRule
                  - events:DisableRule
                  - events:EnableRule
                  - events:PutRule
                  - events:PutTargets
                  - events:RemoveTargets
        - PolicyName: SpecificPermissions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Environment}-${ProjectName}*
                Effect: Allow
                Action:
                  - lambda:AddPermission
                  - lambda:CreateFunction
                  - lambda:DeleteFunction
                  - lambda:GetFunction
                  - lambda:GetFunctionConfiguration
                  - lambda:InvokeFunction
                  - lambda:RemovePermission
                  - lambda:UpdateAlias
                  - lambda:DeleteAlias
                  - lambda:ListVersionsByFunction
                  - lambda:PublishVersion
                  - lambda:CreateAlias
                  - lambda:TagResource
                  - lambda:UntagResource
                  - lambda:UpdateFunctionCode
                  - lambda:UpdateFunctionConfiguration
                  - lambda:ListTags
                  - lambda:TagResource
                  - lambda:UntagResource
              - Resource: "*"
                Effect: Allow
                Action:
                  - sqs:CreateQueue
                  - sqs:GetQueueAttributes
              - Resource: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${Environment}-${ProjectName}*
                Effect: Allow
                Action:
                  - sqs:AddPermission
                  - sqs:CreateQueue
                  - sqs:DeleteQueue
                  - sqs:GetQueueAttributes
                  - sqs:RemovePermission
                  - sqs:SetQueueAttributes
              - Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${Environment}-${ProjectName}*
                Effect: Allow
                Action:
                  - dynamodb:DeleteTable
                  - dynamodb:DescribeTable
                  - dynamodb:DescribeTimeToLive
                  - dynamodb:CreateTable
                  - dynamodb:UpdateTimeToLive
                  - dynamodb:UpdateTable
                  - dynamodb:GetItem
                  - dynamodb:Scan
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeletItem
              - Resource: "*"
                Effect: Allow
                Action:
                  - lambda:CreateEventSourceMapping
                  - lambda:DeleteEventSourceMapping
                  - lambda:GetEventSourceMapping
                  - lambda:UpdateEventSourceMapping
                  - lambda:PutFunctionConcurrency
                  - lambda:DeleteFunctionConcurrency
              - Effect: Allow
                Action: sns:*
                Resource: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${Environment}-${ProjectName}*

  
  ############################################
  ############ CODE PIPELINE #################
  ############################################

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${Environment}-${ProjectName}
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourceCodeOutputArtifact
              Configuration:
                PollForSourceChanges: true
                BranchName: !Ref RepositoryBranchName
                RepositoryName: !Ref RepositoryName
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceCodeOutputArtifact
              OutputArtifacts:
                - Name: BuildOutputArtifact
              RunOrder: 1
        - !If
          - ProdEnvironment
          - Name: Approval
            Actions:
              - Name: Approval
                ActionTypeId:
                  Category: Approval
                  Owner: AWS
                  Provider: Manual
                  Version: '1'
                RunOrder: 1
          - !Ref AWS::NoValue
        - Name: DeployDeviceMangerApi
          Actions:
            - Name: DeployDeviceManager
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              InputArtifacts:
                - Name: BuildOutputArtifact
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: !Sub ${Environment}-${ProjectName}-api
                RoleArn: !GetAtt CloudFormationServiceRole.Arn
                Capabilities: CAPABILITY_NAMED_IAM
                StackName: !Sub ${Environment}-${ProjectName}-api
                TemplatePath: BuildOutputArtifact::device-manager-api-tmp.yaml
                ParameterOverrides: !Sub |
                  {
                    "Environment": "${Environment}",
                    "ProjectName": "${ProjectName}",
                    "CloudWatchLogsRetentionInDays": "${CloudWatchLogsRetentionInDays}"
                  }
              RunOrder: 1
            - Name: ExecuteDeviceMangerApi
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              Configuration:
                StackName: !Sub ${Environment}-${ProjectName}-api
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Sub ${Environment}-${ProjectName}-api
                OutputFileName: api.json
              OutputArtifacts:
                - Name: ApiArtifact
              RunOrder: 2

        - Name: DeployServices
          Actions:
            - Name: DeployDeviceStorage
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              InputArtifacts:
                - Name: BuildOutputArtifact
                - Name: ApiArtifact
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: !Sub ${Environment}-${ProjectName}-storage
                RoleArn: !GetAtt CloudFormationServiceRole.Arn
                Capabilities: CAPABILITY_NAMED_IAM
                StackName: !Sub ${Environment}-${ProjectName}-storage
                TemplatePath: BuildOutputArtifact::device-storage-tmp.yaml
                ParameterOverrides: !Sub |
                  {
                    "CloudWatchLogsRetentionInDays": "${CloudWatchLogsRetentionInDays}",
                    "NewDeviceTopicArn": {"Fn::GetParam" : ["ApiArtifact", "api.json", "NewDeviceSnsArn"]},
                    "Environment": "${Environment}",
                    "ProjectName": "${ProjectName}"
                  }
              RunOrder: 1
            - Name: DeployDeviceConfiguration
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              InputArtifacts:
                - Name: BuildOutputArtifact
                - Name: ApiArtifact
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: !Sub ${Environment}-${ProjectName}-configuration
                RoleArn: !GetAtt CloudFormationServiceRole.Arn
                Capabilities: CAPABILITY_NAMED_IAM
                StackName: !Sub ${Environment}-${ProjectName}-configuration
                TemplatePath: BuildOutputArtifact::device-configuration-tmp.yaml
                ParameterOverrides: !Sub |
                  {
                    "CloudWatchLogsRetentionInDays": "${CloudWatchLogsRetentionInDays}",
                    "NewDeviceTopicArn": {"Fn::GetParam" : ["ApiArtifact", "api.json", "NewDeviceSnsArn"]},
                    "Environment": "${Environment}",
                    "ProjectName": "${ProjectName}"
                  }
              RunOrder: 1
            - Name: DeploySapNotification
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              InputArtifacts:
                - Name: BuildOutputArtifact
                - Name: ApiArtifact
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: !Sub ${Environment}-${ProjectName}-sap-notification
                RoleArn: !GetAtt CloudFormationServiceRole.Arn
                Capabilities: CAPABILITY_NAMED_IAM
                StackName: !Sub ${Environment}-${ProjectName}-sap-notification
                TemplatePath: BuildOutputArtifact::sap-notification-tmp.yaml
                ParameterOverrides: !Sub |
                  {
                    "CloudWatchLogsRetentionInDays": "${CloudWatchLogsRetentionInDays}",
                    "NewDeviceTopicArn": {"Fn::GetParam" : ["ApiArtifact", "api.json", "NewDeviceSnsArn"]},
                    "Environment": "${Environment}",
                    "ProjectName": "${ProjectName}"
                  }
              RunOrder: 1
            - Name: EcecuteDeviceStorage
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              Configuration:
                StackName: !Sub ${Environment}-${ProjectName}-storage
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Sub ${Environment}-${ProjectName}-storage
              RunOrder: 2
            - Name: EcecuteDeviceConfiguration
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              Configuration:
                StackName: !Sub ${Environment}-${ProjectName}-configuration
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Sub ${Environment}-${ProjectName}-configuration
              RunOrder: 2
            - Name: EcecuteSapNotification
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              Configuration:
                StackName: !Sub ${Environment}-${ProjectName}-sap-notification
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Sub ${Environment}-${ProjectName}-sap-notification
              RunOrder: 2

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: arn:aws:logs:*:*:*
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:DescribeLogGroups
              - Resource: !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${Environment}-${ProjectName}*
                Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                  - cloudformation:CreateStack
                  - cloudformation:DescribeStacks
                  - cloudformation:DeleteStack
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ValidateTemplate
              - Resource: "*"
                Effect: Allow
                Action:
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
              - Resource: !GetAtt CodeBuildProject.Arn
                Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                  - codebuild:StopBuild
              - Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/${Environment}-${ProjectName}*
                Effect: Allow
                Action:
                  - iam:PassRole

Conditions:
  ProdEnvironment: !Equals [!Ref Environment, prod]
